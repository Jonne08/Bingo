/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guillaume
 */
public class GuiVerkoop extends javax.swing.JFrame {

    /**
     * Creates new form GuiAankoop
     */
    private static final GuiVerkoop guiAk = new GuiVerkoop();
    DefaultTableModel model;
    DefaultTableModel modal;
    private Spaarkaart sk;
    private Filiaal fn;
    ArrayList<Artikel> arts = new ArrayList<Artikel>();
    ArrayList<Artikel> artList;
    
    public GuiVerkoop() {
        initComponents();
        btnPlus.setEnabled(false);
        btnMin.setEnabled(false);
        btnVerwijder.setEnabled(false);
    }
    
    public static GuiVerkoop getInstance()
    {
        return guiAk;
    }
    
    public void setSpaarkaart(Spaarkaart sk)
    {
        this.sk = sk;
        lblVoornaam.setText(sk.getSNaam() + " " + sk.getVoornaam());
        lblNaam.setText((sk.getNaam()));
        lblStraat.setText(sk.getStraat() + " " + sk.getNummer());
        lblPostcode.setText(sk.getPostcode() + " " + sk.getStad());
        lblEmail.setText(sk.getEmail());
        if(!sk.getBedrijf())
        {
            lblDag.setText(Integer.toString(sk.getGebD()) + "/" + Integer.toString(sk.getGebM()) + "/" +  Integer.toString(sk.getGebJ()));
        }
        else
        {
            lblDag.setText(sk.getBtw());
        }
        
        lblPunten.setText("Puntentotaal: " + sk.getGesP());
        lblSaldo.setText("Puntensaldo: " + sk.getWerkP());
        if(fn.getMajor() == sk.getID())
        {
            BufferedImage logo;
            try {
                logo = ImageIO.read(new File("major.png"));
                lblBadge1.setIcon(new ImageIcon(logo));
            } catch (IOException ex) 
            {
                System.out.println("?");
            }
        }
        if(sk.getBigspender())
        {
            BufferedImage logo;
            try {
                logo = ImageIO.read(new File("bigspender.png"));
                lblBadge2.setIcon(new ImageIcon(logo));
            } catch (IOException ex) 
            {
                System.out.println("?");
            }
        }
        if(sk.getWolverene())
        {
            BufferedImage logo;
            try {
                logo = ImageIO.read(new File("wolverene.png"));
                lblBadge3.setIcon(new ImageIcon(logo));
            } catch (IOException ex) 
            {
                System.out.println("?");
            }
        }          
        InputStream bs = sk.getFoto();
        try {
            BufferedImage img = ImageIO.read(bs);
            Image bi = img.getScaledInstance(100, 100, Image.SCALE_SMOOTH);
            lblImage.setIcon(new ImageIcon(bi));
        } catch (IOException ex) {
            //Logger.getLogger(GuiAankoop.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void setFiliaal(Filiaal fi)
    {
        this.fn = fi;
    }

    public void updateTable()
            {
                System.out.println(fn.getWinkel());
            MySQL mySQL = new MySQL();
            artList = mySQL.getArtikels(fn.getWinkel());
    
    modal.setColumnIdentifiers(new String[]{"Naam", "Barcode" });
    //System.out.println(fn.getWinkel());
    
    for(Artikel a : artList)
    {
        System.out.println("is saai");
        modal.addRow(new Object[]{a.getNaam(), a.getBarcode()});
    }
    System.out.println("is geen competitie voor Guillaume");
    }

    public boolean isArtikel(String barcode)
    {
        boolean r = false;
        for(Artikel a : artList)
        {
            if(a.getBarcode().equals(barcode))
            {
                r = true;
            }
        }
        return r;
    }    
    
    public Artikel getArtikel(String barcode)
    {
        Artikel art = new Artikel();
        for(Artikel a : artList)
        {
            if(a.getBarcode().equals(barcode))
            {
                art = a;
            }
        }
        return art;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblVoornaam = new javax.swing.JLabel();
        lblNaam = new javax.swing.JLabel();
        lblStraat = new javax.swing.JLabel();
        lblPostcode = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblDag = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblPunten = new javax.swing.JLabel();
        lblBadge1 = new javax.swing.JLabel();
        lblSaldo = new javax.swing.JLabel();
        lblBadge2 = new javax.swing.JLabel();
        lblBadge3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtArtID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAankopen = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtHoev = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnMin = new javax.swing.JButton();
        btnVerwijder = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Info"));

        lblVoornaam.setText("Voornaam");

        lblNaam.setText("Naam");

        lblStraat.setText("Straat");

        lblPostcode.setText("Postcode");

        lblEmail.setText("Email");

        lblDag.setText("dag");

        lblPunten.setText("Puntentotaal");

        lblSaldo.setText("Puntensaldo");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                        .add(lblPostcode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblStraat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblNaam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lblVoornaam, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(lblPunten))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 75, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblEmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(lblDag, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(72, 72, 72))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblSaldo)
                        .add(132, 132, 132)
                        .add(lblBadge1)
                        .add(41, 41, 41)
                        .add(lblBadge2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 31, Short.MAX_VALUE)
                        .add(lblBadge3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(lblImage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(lblVoornaam)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblEmail)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, lblNaam))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(lblStraat)
                                    .add(lblDag))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblPostcode)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(lblPunten)
                                .add(9, 9, 9))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(49, 49, 49)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(lblBadge1)
                                    .add(lblSaldo)
                                    .add(lblBadge2)
                                    .add(lblBadge3))
                                .add(0, 0, Short.MAX_VALUE))))
                    .add(lblImage, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Artikels"));

        modal = new DefaultTableModel()
        {
            public boolean isCellEditable(int row, int column)
            {
                return false;
            }
        };
        jTable2.setModel(modal);
        jScrollPane3.setViewportView(jTable2);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Aankoop"));

        jLabel15.setText("Barcode");

        model = new DefaultTableModel()
        {
            public boolean isCellEditable(int row, int column)
            {
                return false;
            }
        };
        tblAankopen.setModel(model);
        model.setColumnIdentifiers(new Object[]{"Naam", "Hoeveelheid", "Prijs" });
        tblAankopen.getSelectionModel().addListSelectionListener(new ListSelectionListener()
            {
                @Override
                public void valueChanged(ListSelectionEvent e)
                {
                    if (!e.getValueIsAdjusting())
                    {
                        boolean select = tblAankopen.getSelectedRowCount() > 0;
                        btnPlus.setEnabled(select);
                        //if(Integer.parseInt(tblAankopen.getValueAt(tblAankopen.getSelectedRow(), 1).toString()) < 2)
                        //{
                            //    btnMin.setEnabled(false);
                            //}
                        //else
                        //{
                            btnMin.setEnabled(select);
                            //}
                        btnVerwijder.setEnabled(select);
                    }
                }
            });
            jScrollPane1.setViewportView(tblAankopen);

            jLabel16.setText("Aantal");

            jButton1.setText("Toevoegen");
            jButton1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
                }
            });

            jButton2.setText("Aankoop verwerken");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            btnPlus.setText("+");
            btnPlus.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnPlusActionPerformed(evt);
                }
            });

            btnMin.setText("-");
            btnMin.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnMinActionPerformed(evt);
                }
            });

            btnVerwijder.setText("x");
            btnVerwijder.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnVerwijderActionPerformed(evt);
                }
            });

            jButton3.setText("Terug");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
            jPanel3.setLayout(jPanel3Layout);
            jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jButton3)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButton2))
                            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jButton1)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel15)
                                .add(18, 18, 18)
                                .add(txtArtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel16)
                                .add(18, 18, 18)
                                .add(txtHoev, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(18, 18, 18)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(btnMin)
                        .add(btnPlus)
                        .add(btnVerwijder))
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel3Layout.createSequentialGroup()
                    .add(17, 17, 17)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel15)
                        .add(txtArtID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel16)
                        .add(txtHoev, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jButton1)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel3Layout.createSequentialGroup()
                            .add(btnPlus)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(btnMin)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(btnVerwijder)))
                    .add(18, 18, 18)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jButton2)
                        .add(jButton3))
                    .add(257, 257, 257))
            );

            org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .addContainerGap()
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                            .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(13, 13, 13)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(17, 17, 17)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 331, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MySQL sql = new MySQL();
        NumberFormat num = NumberFormat.getCurrencyInstance();        
        int hoev = Integer.parseInt(txtHoev.getText());
        if(isArtikel(txtArtID.getText()))
        {
            if(hoev > 0)
            {
                Artikel art = getArtikel(txtArtID.getText());
                int check = checkDuplicates(art.getID());
                if(check >= 0)
                {
                    int nHoev = Integer.parseInt(tblAankopen.getValueAt(check, 1).toString())+hoev;
                    double nPrijs = nHoev * art.getPrijs();
                    tblAankopen.setValueAt(nHoev, check, 1);
                    tblAankopen.setValueAt(num.format(nPrijs), check, 2);
                }
                else
                {
                    model.addRow(new Object[] {art.getNaam(), hoev, num.format(art.getPrijs()*hoev) });
                    arts.add(art);
                }
            }
        else
        {
            JOptionPane.showMessageDialog(guiAk, "Hoeveelheid ongeldig", "Hoeveelheid ongeldig", JOptionPane.ERROR_MESSAGE);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(guiAk, "Kan artikel niet vinden", "Kan artikel niet vinden", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        int row = tblAankopen.getSelectedRow();
        int hoev = Integer.parseInt(tblAankopen.getValueAt(row, 1).toString());
        if(hoev > 0)
        {
            btnMin.setEnabled(true);
        }
        NumberFormat num = NumberFormat.getCurrencyInstance();
        double prijs = (hoev + 1) * arts.get(row).getPrijs();
        tblAankopen.setValueAt(hoev+1, row, 1);
        tblAankopen.setValueAt(num.format(prijs), row, 2);
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinActionPerformed
        int row = tblAankopen.getSelectedRow();
        int hoev = Integer.parseInt(tblAankopen.getValueAt(row, 1).toString());
        if(hoev == 2)
        {
            btnMin.setEnabled(false);
        }
        NumberFormat num = NumberFormat.getCurrencyInstance();
        double prijs = (hoev - 1) * arts.get(row).getPrijs();
        tblAankopen.setValueAt(hoev-1, row, 1);
        tblAankopen.setValueAt(num.format(prijs), row, 2);
    }//GEN-LAST:event_btnMinActionPerformed

    private void btnVerwijderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerwijderActionPerformed
        int row = tblAankopen.getSelectedRow();
        //model = (DefaultTableModel) tblAankopen.getModel();
        System.out.println(model.getRowCount());
        row = tblAankopen.convertRowIndexToModel(row);
        if(row > -1)
        {
            model.removeRow(row);
            arts.remove(row);
        }
    }//GEN-LAST:event_btnVerwijderActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        GuiVerkoopVerw guiVKV = GuiVerkoopVerw.getInstance();
        guiVKV.setFiliaal(fn);
        guiVKV.setSpaarkaart(sk);
        for(Artikel a : arts)
        {
            int hoev = Integer.parseInt(tblAankopen.getValueAt(arts.indexOf(a), 1).toString());           
            System.out.println("test1");
            System.out.println("bla");
            guiVKV.setAankopen(a, hoev);
        }
        guiVKV.init();
        setVisible(false);
        guiVKV.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        GuiFiliaalIndex guiFI = GuiFiliaalIndex.getInstance();
        guiFI.setFiliaal(fn);
        setVisible(false);
        guiFI.setVisible(true);


    }//GEN-LAST:event_jButton3ActionPerformed

    private int checkDuplicates(int artID)
    {
        int rtn = -1;
        for(Artikel a: arts)
        {
            if(a.getID() == artID)
            {
                rtn = arts.indexOf(a);
            }
        }
        return rtn;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMin;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnVerwijder;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblBadge1;
    private javax.swing.JLabel lblBadge2;
    private javax.swing.JLabel lblBadge3;
    private javax.swing.JLabel lblDag;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblNaam;
    private javax.swing.JLabel lblPostcode;
    private javax.swing.JLabel lblPunten;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JLabel lblStraat;
    private javax.swing.JLabel lblVoornaam;
    private javax.swing.JTable tblAankopen;
    private javax.swing.JTextField txtArtID;
    private javax.swing.JTextField txtHoev;
    // End of variables declaration//GEN-END:variables
}
