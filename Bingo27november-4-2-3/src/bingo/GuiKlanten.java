/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bingo;

import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jonas
 */
public class GuiKlanten extends javax.swing.JFrame {

    /**
     * Creates new form GuiArtikels
     */
    
    private static final GuiKlanten guiArts = new GuiKlanten();
    protected Winkel wn;
    ArrayList<Account> accs;
    ArrayList<Account> curList;
    
    public GuiKlanten() 
    {
        GuiWinkelIndex guiWI = GuiWinkelIndex.getInstance();
        wn = guiWI.getWinkel();
        initComponents();
    }
    
    public static GuiKlanten getInstance()
    {
        return guiArts;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccounts = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DefaultTableModel model = new DefaultTableModel()
        {
            public boolean isCellEditable(int row, int column)
            {
                return false;
            }
        };
        tblAccounts.setModel(model);
        MySQL mySQL = new MySQL();
        accs = mySQL.getAccounts();
        curList = accs;
        model.setColumnIdentifiers(new String[]{"ID", "Naam", "Straat", "Nummer", "Postcode", "Stad", "Bedrijf"});
        for(Account a : accs)
        {
            model.addRow(new Object[]{a.getID(), a.getNaam(), a.getStraat(), a.getNummer(), a.getPostcode(), a.getStad(), a.getBedrijf()});
        }
        jScrollPane1.setViewportView(tblAccounts);

        jButton1.setText("Bewerken");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jButton2.setText("Terug");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.out.println(tblAccounts.getSelectedRow());
        System.out.println(curList.get(tblAccounts.getSelectedRow()).getNaam());  
        GuiKlantBew guiKB = GuiKlantBew.getInstance();
        if(curList.isEmpty())
        {
            guiKB.setAccount(accs.get(tblAccounts.getSelectedRow()));
            System.out.println("CL: " + curList.get(tblAccounts.getSelectedRow()).getNaam());
        }
        else
        {
            guiKB.setAccount(curList.get(tblAccounts.getSelectedRow()));
            System.out.println("AL: " + accs.get(tblAccounts.getSelectedRow()).getNaam());
        }
        setVisible(false);
        guiKB.setFI(false);
        guiKB.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String search = txtSearch.getText();
        System.out.println(search);
        if(search.equals(""))
        {
            initTable(accs);
        }
        else
        {
            ArrayList<Account> zkList = zoekArtikels(search);
            initTable(zkList);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    public void updateTable()
    {
        DefaultTableModel model = (DefaultTableModel) tblAccounts.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--)
        {
            model.removeRow(i);
        }
        MySQL mySQL = new MySQL();
        accs = mySQL.getAccounts();
        curList = accs;
        model.setColumnIdentifiers(new String[]{"ID", "Naam", "Straat", "Nummer", "Postcode", "Stad", "Bedrijf" });
        for(Account a : accs)
        {
            model.addRow(new Object[]{a.getID(), a.getNaam(), a.getStraat(), a.getNummer(), a.getPostcode(), a.getStad(), a.getBedrijf()});
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        GuiFiliaalIndex guiWI = GuiFiliaalIndex.getInstance();
        setVisible(false);
        guiWI.setVisible(true); 
    }//GEN-LAST:event_jButton2ActionPerformed

    public ArrayList<Account> zoekArtikels(String kw)
    {
        ArrayList<Account> zkList = new ArrayList<Account>();
        for(Account a : accs)
        {
            if(a.getNaam().toLowerCase().startsWith(kw.toLowerCase()) || Integer.toString(a.getID()).startsWith(kw))
            {
                zkList.add(a);
            }
        }
        return zkList;
    }
    
    public void initTable(ArrayList<Account> aList)
    {
        DefaultTableModel model = (DefaultTableModel) tblAccounts.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--)
        {
            model.removeRow(i);
        }
        for(Account a : aList)
        {
            model.addRow(new Object[]{a.getID(), a.getNaam(), a.getStraat(), a.getNummer(), a.getPostcode(), a.getStad(), a.getBedrijf()});
            this.curList = aList;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiKlanten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiKlanten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiKlanten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiKlanten.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiKlanten().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAccounts;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
